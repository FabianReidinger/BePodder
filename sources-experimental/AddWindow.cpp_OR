
#include "AddWindow.h"
#include "Application.h"

#include <Message.h>
#include "BPLocale.h"
#include <Button.h>
#include <StringView.h>
#include <Box.h>
#include <StringView.h>
#include <View.h>
#include <Clipboard.h>
#include <ScrollView.h>
#include "MainWindow.h"
#include "BPAlert.h"


extern MainWindow*	main_window;

 
AddWindow::AddWindow() :
	BWindow(BRect(250,70,640,220),"AddWindow", B_MODAL_WINDOW, B_NOT_RESIZABLE|B_NOT_ZOOMABLE|B_ASYNCHRONOUS_CONTROLS)
{

	
	BButton*		but;
	BButton*		but2;


//	const rgb_color bgcolor = {255,215,96,255};
	const rgb_color boxcolor = {255,233,167,255};
//#ifdef ZETA
//	SetWindowColor(bgcolor);
//#endif
	
	BFont font=*(be_plain_font);
	

	BRect r(Bounds());
	//r.InsetBy(0,15);
	
	BBox *box = new BBox(r,"url_bbox", B_FOLLOW_LEFT_RIGHT, B_FANCY_BORDER);
		
	box->SetLabel(_T("Insert the rss feed url!"));
	box->SetBorder(B_PLAIN_BORDER);
	box->SetViewColor(boxcolor);

	AddChild(box);
	

	
    BStringView* txt = new BStringView(BRect(20,15,370,65),"url-",_T("URL:"));
  	box->AddChild(txt);
	txt->SetViewColor(boxcolor);
	txt->ResizeToPreferred();
	
	BRect	rect(20,txt->Frame().bottom+1,370 - B_V_SCROLL_BAR_WIDTH ,95);
	BRect	rr= rect.OffsetToCopy(0,0);
	//rr = 
	rr.InsetBy(BPoint(2,2));
	text = new BTextView(rect,"",rr,B_FOLLOW_LEFT_RIGHT,B_WILL_DRAW | B_NAVIGABLE);
	BScrollView*	scroller = new BScrollView("scroller",text,B_FOLLOW_LEFT_RIGHT,B_WILL_DRAW | B_NAVIGABLE,false,true);
	//text->SetWordWrap(false);
	box->AddChild(scroller);
	//text->SetDivider(30);
	//text->SetText("");
	//text->SetViewColor(boxcolor);
	//text->MakeFocus(true);

	
	addrect = box->Bounds();
	addrect.InsetBy(25, 20);
	addrect.top = addrect.bottom - 12;
	addrect.left = addrect.right - font.StringWidth(_T("Cancel")) - 30;
	box->AddChild(but = new BButton(addrect,"",_T("Cancel"),new BMessage('can')));
	but->SetViewColor(boxcolor);
	
	addrect.right = addrect.left - 15;
	addrect.left = addrect.right - font.StringWidth(_T("Add")) - 30;
	box->AddChild(but2 = new BButton(addrect,"",_T("Add"),new BMessage('sav')));
	but2->SetViewColor(boxcolor);


	//controlliamo se c'e' qualcosa nella clipboard?
	const char *clip_text = NULL;
	bool	addButton = false;
	int32 textLen;
	BString url;
	BMessage *clip = (BMessage *)NULL;
	if (be_clipboard->Lock() ){
		clip = be_clipboard->Data();
		
		if ( clip && ( clip->FindData("text/plain", B_MIME_TYPE,(const void **)&clip_text, &textLen) == B_OK )){
		url.SetTo(clip_text,textLen);
		
		if(url.FindFirst("http://") == 0)
			addButton = true;
		else
		if(url.FindFirst("pcast://") == 0)
			addButton = true;
		else
		if(url.FindFirst("feed://") == 0)
			addButton = true;
		}	
		be_clipboard->Unlock();
	} 
	
	if(addButton==true){
		addrect.right = addrect.left - 15;
		addrect.left = addrect.right - font.StringWidth(_T("Paste")) - 30;
		BMessage* msg=new BMessage('past');
		msg->AddString("url",url);
		BButton* clip_but;
		box->AddChild(clip_but = new BButton(addrect,"",_T("Paste"),msg));
		clip_but->SetViewColor(boxcolor);
	}
	
	MoveTo(BPAlert::AlertPosition(Bounds().Width(),Bounds().Height()));
}


void	
AddWindow::MessageReceived(BMessage *mess){

	
	if(mess->what == 'can'){
		BMessenger(this).SendMessage(B_QUIT_REQUESTED); 
	}
	else
	if(mess->what == 'sav'){
		BMessage	msg(DOWNLOAD_CHANNEL);
		msg.AddString("url",text->Text());
		BMessenger(main_window).SendMessage(&msg);
		BMessenger(this).SendMessage(B_QUIT_REQUESTED);
	}
	else
	if(mess->what== 'past'){
		BString url;
		mess->FindString("url",&url);
		text->SetText(url.String());	
	}
	else BWindow::MessageReceived(mess);
}
		


